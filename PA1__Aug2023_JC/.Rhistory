setwd("D:/Coursera_May_2023_JHU/Course5_Reproducible_Research/Week2_CourseProject1/PA1__Au62023_JC")
#read file
activity <- read.csv("activity.csv")
#read file
activity <- read.csv("Week2_CourseProject1/activity.csv")
#read file
activity <- read.csv("./Week2_CourseProject1/activity.csv")
#read file
activity <- read.csv("D:/Coursera_May_2023_JHU/Course5_Reproducible_Research/Week2_CourseProject1/activity.csv")
#look at summary
summary(activity)
print (paste(nrow(activity), "rows"))
#load package
library(ggplot2)
#create plot
ggplot(steps_t, aes(total_steps)) +
theme_bw() +
geom_histogram(fill = "gray", colour = "blue") +
ylim(min = -0.1, max = 10.1) +
labs(title = "Frequency of total steps per day before imputing", x = "total number of steps", y = "number of days")
#load package
library(lubridate)
#change class from character to date
activity$date <- ymd(activity$date)
#double check class changed
class(activity$date)
#load package
library(dplyr)
#calculate sum of steps
steps_t <- activity %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE))
#load package
library(ggplot2)
#create plot
ggplot(steps_t, aes(total_steps)) +
theme_bw() +
geom_histogram(fill = "gray", colour = "blue") +
ylim(min = -0.1, max = 10.1) +
labs(title = "Frequency of total steps per day before imputing", x = "total number of steps", y = "number of days")
total_mm1 <- paste ("mean1 = ", mean(steps_t$total_steps), "; median1 = ", median(steps_t$total_steps))
total_mm1
steps_av <- activity %>%
group_by(interval) %>%
summarise(average_steps = mean(steps, na.rm = TRUE))
ggplot(steps_av, aes(x = interval, y = average_steps, group = 1)) +
theme_bw() +
geom_line() +
labs(title = "Average number of steps for each 5 minute interval before imputing", x = "5 minute interval", y = "average number of steps")
steps_av[steps_av$average_steps == (max(steps_av$average_steps)), ]
paste("steps = ", sum(is.na(activity$steps)), " ;date = ", sum(is.na(activity$date)), " ;interval = ", sum(is.na(activity$interval)))
steps_med <- activity %>%
group_by(interval) %>%
summarise(median_steps = median(steps, na.rm = TRUE))
activity_na1 <- activity[is.na(activity$steps), c(2:3)]
steps_medcol <- steps_med[ , 2]
#bind columns
activity_na2 <- cbind(steps_medcol, activity_na1)
#change column names
colnames(activity_na2) <- c("steps", "date", "interval")
activity_complete <- activity[!is.na(activity$steps), ]
#bind rows
activity2 <- rbind(activity_complete, activity_na2)
#arrange rows by date
activity2 <- activity2 %>%
arrange(date)
#count NAs to check imputation
sum(is.na(activity2))
steps2_t <- activity2 %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE))
ggplot(steps2_t, aes(total_steps)) +
theme_bw() +
geom_histogram(fill = "gray", colour = "blue") +
ylim(min = -0.1, max = 10.1) +
labs(title = "Frequency of total steps per day after imputing", x = "total number of steps", y = "number of days")
#calculate mean and median of new data frame
total_mm2 <- paste ("mean2 = ", mean(steps2_t$total_steps), "; median2 = ", median(steps2_t$total_steps))
#print mean and median after imputing
total_mm2
#print mean and median before imputing
total_mm1
#create new column by copying date column
activity2$day <- activity$date
#change values in day column to weekday name
activity2$day <- wday(activity2$day, label = TRUE, abbr = FALSE)
#create new column
activity2$wday <- activity2$day
#change class from factor to character
activity2$wday <- as.character(activity2$wday)
#replace Saturday and Sunday to weekend
activity2$wday[activity2$wday == "Saturday" | activity2$wday == "Sunday"] <- "weekend"
#days not already replaced to weekend will be replaced by weekday
activity2$wday[activity2$wday != "weekend"] <- "weekday"
steps2_av <- activity2 %>%
group_by(interval, wday) %>%
summarise(average_steps = mean(steps, na.rm = TRUE))
ggplot(steps2_av, aes(x = interval, y = average_steps, group = 1)) +
facet_wrap(~wday, dir = "v", scales = "fixed") +
theme_bw() +
geom_line() +
labs(title = "Average number of steps for each 5 minute interval after imputing", x = "5 minute interval", y = "average number of steps")
steps2_av %>%
group_by(wday) %>%
summarise(mean = mean(average_steps), median = median(average_steps), max = max(average_steps))
#read file
activity <- read.csv("D:/Coursera_May_2023_JHU/Course5_Reproducible_Research/Week2_CourseProject1/activity.csv")
#look at summary
summary(activity)
print (paste(nrow(activity), "rows"))
#load package
library(lubridate)
#change class from character to date
activity$date <- ymd(activity$date)
#double check class changed
class(activity$date)
#load package
library(dplyr)
#calculate sum of steps
steps_t <- activity %>%
na.omit %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE))
#load package
library(ggplot2)
#create plot
ggplot(steps_t, aes(total_steps)) +
theme_bw() +
geom_histogram(fill = "gray", colour = "blue") +
ylim(min = -0.1, max = 10.1) +
labs(title = "Frequency of total steps per day before imputing", x = "total number of steps", y = "number of days")
total_mm1 <- paste ("mean1 = ", mean(steps_t$total_steps), "; median1 = ", median(steps_t$total_steps))
total_mm1
steps_av <- activity %>%
na.omit %>%
group_by(interval) %>%
summarise(average_steps = mean(steps, na.rm = TRUE))
ggplot(steps_av, aes(x = interval, y = average_steps, group = 1)) +
theme_bw() +
geom_line() +
labs(title = "Average number of steps for each 5 minute interval before imputing", x = "5 minute interval", y = "average number of steps")
steps_av[steps_av$average_steps == (max(steps_av$average_steps)), ]
paste("steps = ", sum(is.na(activity$steps)), " ;date = ", sum(is.na(activity$date)), " ;interval = ", sum(is.na(activity$interval)))
steps_med <- activity %>%
na.omit %>%
group_by(interval) %>%
summarise(median_steps = median(steps, na.rm = TRUE))
activity_na1 <- activity[is.na(activity$steps), c(2:3)]
steps_medcol <- steps_med[ , 2]
#bind columns
activity_na2 <- cbind(steps_medcol, activity_na1)
#change column names
colnames(activity_na2) <- c("steps", "date", "interval")
activity_complete <- activity[!is.na(activity$steps), ]
#bind rows
activity2 <- rbind(activity_complete, activity_na2)
#arrange rows by date
activity2 <- activity2 %>%
arrange(date)
#count NAs to check imputation
sum(is.na(activity2))
steps2_t <- activity2 %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE))
ggplot(steps2_t, aes(total_steps)) +
theme_bw() +
geom_histogram(fill = "gray", colour = "blue") +
ylim(min = -0.1, max = 10.1) +
labs(title = "Frequency of total steps per day after imputing", x = "total number of steps", y = "number of days")
#calculate mean and median of new data frame
total_mm2 <- paste ("mean2 = ", mean(steps2_t$total_steps), "; median2 = ", median(steps2_t$total_steps))
#print mean and median after imputing
total_mm2
#print mean and median before imputing
total_mm1
#create new column by copying date column
activity2$day <- activity$date
#change values in day column to weekday name
activity2$day <- wday(activity2$day, label = TRUE, abbr = FALSE)
#create new column
activity2$wday <- activity2$day
#change class from factor to character
activity2$wday <- as.character(activity2$wday)
#replace Saturday and Sunday to weekend
activity2$wday[activity2$wday == "Saturday" | activity2$wday == "Sunday"] <- "weekend"
#days not already replaced to weekend will be replaced by weekday
activity2$wday[activity2$wday != "weekend"] <- "weekday"
steps2_av <- activity2 %>%
group_by(interval, wday) %>%
summarise(average_steps = mean(steps, na.rm = TRUE))
ggplot(steps2_av, aes(x = interval, y = average_steps, group = 1)) +
facet_wrap(~wday, dir = "v", scales = "fixed") +
theme_bw() +
geom_line() +
labs(title = "Average number of steps for each 5 minute interval after imputing", x = "5 minute interval", y = "average number of steps")
steps2_av %>%
group_by(wday) %>%
summarise(mean = mean(average_steps), median = median(average_steps), max = max(average_steps))
